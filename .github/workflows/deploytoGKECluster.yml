# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  environment: development
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: sotn-k8cluster-demo    # Add your cluster name here.
  GKE_ZONE: us-east1   # Add your cluster zone here.
  DEPLOYMENT_NAME: gke-sotn-demo # Add your deployment name here.
  IMAGE: static-site

jobs:
  test:
        name: Unit-Tests
        runs-on: ubuntu-latest

        steps:
        # Checkout the Repo
        - uses: actions/checkout@v3

        # Install Node 12
        - name: Setup Node
          uses: actions/setup-node@v3
          with:
            node-version: 12

        # Install dependencies
        - run: npm install

        # Run tests
        - run: npm test

  setup-build:
    name: Setup, Build
    needs: test
    runs-on: ubuntu-latest
    environment: development

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    - name: Build 
      run: |-
        docker build \
          --tag "cbreakspear/mynodeimage:v1" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Publish
      run: |-
        docker push "cbreakspear/mynodeimage:v1"
  
  publish-deploy:
    name: Publish, and Deploy
    needs: setup-build
    runs-on: ubuntu-latest
    environment: development

    steps:
    # Deploy the Docker image to the GKE cluster
    - name: Deploy Image to GKE
      run: |-
        set image cbreakspear/mynodeimage:v1
        kubectl apply -f k8deploy.yaml
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide